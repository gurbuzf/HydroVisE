var rcCoef = {};
let rc_url = 'http://s-iihr50.iihr.uiowa.edu/smap/retro/data/ratingCurve/rc_usgs.csv'
// let translate_id  = true;

function translateID (usgs_id){
    t = new Map([
        ['05471500','272942'],
        ['05387440','503998'],
        ['05459500','465190'],
        ['05421740','426049'],
        ['06903400','104818'],
        ['05490500','204188'],
        ['06809210','178160'],
        ['05464500','367813'],
        ['05489000','108201'],
        ['06903700','83159 '],
        ['05463500','323592'],
        ['06483290','553137'],
        ['05470000','313504'],
        ['05487520','203851'],
        ['05472500','240462'],
        ['05464000','367593'],
        ['05411600','483619'],
        ['06809500','157405'],
        ['06807410','216572'],
        ['05465000','368052'],
        ['05474000','273299'],
        ['05412500','434514'],
        ['06483500','465030'],
        ['05464780','367916'],
        ['05387500','504030'],
        ['06819185','78279'],
        ['06602020','374994'],
        ['05482000','378559'],
        ['06600500','397674'],
        ['05418400','314529'],
        ['06599900','387745'],
        ['05484800','217531'],
        ['05483600','279587'],
        ['05481950','275929'],
        ['05418500','285449'],
        ['05458300','522951'],
        ['05482500','334449'],
        ['05457700','522855'],
        ['05465500','368123'],
        ['06609500','273761'],
        ['05471000','272678'],
        ['06605000','448250'],
        ['05486000','178416'],
        ['05458900','406874'],
        ['05412020','434478'],
        ['05421000','425876'],
        ['05488110','203920'],
        ['05480820','412870'],
        ['05451500','317905'],
        ['06808500','216714'],
        ['05486490','179425'],
        ['05463000','350386'],
        ['05484650','197506'],
        ['05476750','555865'],
        ['05416900','368221'],
        ['06903900','92010'],
        ['05464420','367769'],
        ['05487470','162846'],
        ['05455700','318272'],
        ['06607500','326674'],
        ['05451770','317961'],
        ['05488500','203941'],
        ['05388250','504104'],
        ['06607200','326618'],
        ['05453100','318079'],
        ['05482300','334282'],
        ['06602400','326673'],
        ['05422000','426239'],
        ['05488200','143605'],
        ['06605850','487052'],
        ['05454500','318225'],
        ['05487980','132569'],
        ['06600100','450755'],
        ['06608500','278516'],
        ['06606600','487254'],
        ['05412400','399711'],
        ['05465700','368142'],
        ['05411850','434365'],
        ['05485640','229021'],
        ['05452500','318037'],
        ['05455500','197256'],
        ['05481650','378537'],
        ['05449500','437890'],
        ['06810000','157543'],
        ['05471050','272783'],
        ['05462000','432886'],
        ['05470500','292251'],
        ['06898000','79118'],
        ['05463050','367567'],
        ['05420680','425748'],
        ['05489500','204046'],
        ['05451210','323529'],
        ['05458500','522980'],
        ['05484900','197517'],
        ['06904010','92050'],
        ['05484000','202584'],
        ['05458000','509679'],
        ['05478265','463732'],
        ['05479000','463834'],
        ['05480500','378268'],
        ['05481000','412946'],
        ['05481300','378371'],
        ['05484500','197446'],
        ['05485500','203777'],
        ['05494300','74725'],
        ['05451700','270936'],
        ['05451900','255051'],
        ['05452000','277520'],
        ['05452200','245378'],
        ['05454300','226574'],
        ['05421760','426130'],
        ['05457505','522792'],
        ['05460400','432794'],
        ['06808820','216755'],
        ['06604440','486916'],
        ['05452500','318031'],
        ['05412340','399598'],
        ['05418110','360567'],
        ['06805850','191552'],
        ['05464695','277781'],
        ['05464220','309414'],
        ['05471200','258321'],
        ['05411900','418967'],
        ['05422560','199682'],
        ['05473065','273178'],
        ['05455100','221500'],
        ['05485605','228998'],
        ['05454220','226541'],
        ['05454090','230973'],
        ['05464942','221201'],
        ['05422600','199722'],
        ['06817000','98104'],
        ['05453520','318208'],
        ['05389000','447887'],
        ['05464315','367697'],
        ['05473450','110818'],
        ['05473400','114284'],
        ['05389400','431052'],
        ['05453000','230601'],
        ['05483450','279554'],
        ['05454000','227265'],
        ['05476590','555741']
    ]);
    return t.get(usgs_id)
}

function evntQ2Stage (butt, hGrid){
    let c = config.modTrace.mod
    let use_mod = Object.keys(c).filter(
        (k) => {return c[k].button == butt}
    )[0];

    if (systemState.mod == use_mod) return;
    let was_mod = systemState.mod;
    systemState.mod = use_mod;
    let pltPath = c[use_mod].pltPath;// + '.text';
    let pltVal = c[use_mod].val;
    div_plot.layout.shapes = hGrid[use_mod];
    console.log(pltPath, pltVal);
    div_plot.data.forEach(          // was_mod use_mod to make decisions on show hide ?
        v => {
            v.visible = !v.visible;
        }
    );

    update ={};
    update["shapes"] = JSON.stringify(hGrid[use_mod]);
    update[pltPath] = pltVal;

    Plotly.restyle(div_plot, update);
    Plotly.relayout(div_plot, update)
}

function Q2Stage(flow_arr) {
    function polynomialRegressor(x, y, order = 3) {
        const xMatrix = [];
        let xTemp = [];
        const yMatrix = numeric.transpose([y]);
        for (let j = 0; j < x.length; j++) {
            xTemp = [];
            for (let i = 0; i <= order; i++) {
                xTemp.push(Math.pow(x[j], i));
            }
            xMatrix.push(xTemp);
        }
        const xMatrixT = numeric.transpose(xMatrix);
        const dot1 = numeric.dot(xMatrixT, xMatrix);
        const dotInv = numeric.inv(dot1);
        const dot2 = numeric.dot(xMatrixT, yMatrix);
        // returns array of coefficients
        return numeric.dot(dotInv, dot2);
    }

    function polynomFunction(flow, Coef) {
        let total = 0;
        for (let i = 0; i < Coef.length; i++) {
            total += Coef[i][0] * (flow ** i);
        }
        return total
    }

    function loadRatingCurve(lid){
        $.ajax({
            url: rc_url,
            dataType: 'text',
            async: false,
            success: function (data) {
                data = d3.csvParse(data);
                let data_rc = data.filter(row => row['link_id'] == String(lid));
                if (data_rc.length == 0) return;
                let x = unpack(data_rc, 'discharge_l');
                var y = unpack(data_rc, 'stage_l');
                x = x.map(data => Number(data) * cfs2cms);
                y = y.map(Number);
                rcCoef[lid] = polynomialRegressor(x, y, order = 3);
            }
        });
    }
    translate_id ? lid = translateID(systemState.comID) : lid = systemState.comID;
    if (!rcCoef[lid]) {
        loadRatingCurve(lid);
    };
    if (rcCoef[lid] == undefined) return [];
    return flow_arr.map(val => val=="" ? "" : polynomFunction(val, rcCoef[lid]))
}